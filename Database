CREATE DATABASE SunshineHotel;
use SunshineHotel;
CREATE TABLE newUser(
    username VARCHAR(50) NOT NULL DEFAULT ' ',
    firstName Varchar(15) NOT NULL DEFAULT ' ',
    lastName Varchar(15) NOT NULL DEFAULT ' ',
	userEmail VARCHAR(45) NOT NULL DEFAULT ' ',
    password VARCHAR(10) NOT NULL DEFAULT ' ',
	Address1    VARCHAR(120) NOT NULL,
	City        VARCHAR(100) NOT NULL,
    State       CHAR(20) NOT NULL,
    Country     CHAR(20) NOT NULL,
    PostalCode  VARCHAR(16) NOT NULL,
    phoneNumber VARCHAR(15) NOT NULL DEFAULT ' ',
    PRIMARY KEY (userName)
);
CREATE TABLE loginDetails(
userName VARCHAR(50) NOT NULL,
userEmail VARCHAR(45) NOT NULL,
password VARCHAR(10) NOT NULL, 
FOREIGN KEY (userName)
        REFERENCES newUser (userName)
        ON UPDATE CASCADE ON DELETE CASCADE  
);
CREATE TABLE Rooms(
roomNo int not null ,
roomType varchar(30) not null,
noOfBedrooms int not null,
noOfWashrooms int not null,
Price DOUBLE not null,
PRIMARY KEY (roomNo)
);
CREATE TABLE roomStatus(
roomNo int not null,
roomStatusID int not null,
FOREIGN KEY (roomNo)
        REFERENCES Rooms (roomNo)
        ON UPDATE CASCADE ON DELETE CASCADE 
);
create table food(
foodid int not null auto_increment,
foodItem varchar(50) not null,
price double not null,
primary key(foodID)
);

Create table packages(
PackageName varchar(25) not null,
roomNo int not null ,
foodID int not null,
discount double not null,
primary key (PackageName),
FOREIGN KEY (roomNo)
        REFERENCES Rooms (roomNo)
        ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (foodid)
        REFERENCES food(foodid)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE reservation(
reservationID int not null auto_increment,
username VARCHAR(50) NOT NULL DEFAULT ' ',
foodID int,
PackageName varchar(25),
roomNo int not null,
checkIn DATE not null,
checkOut DATE not null,
reservationDate Date not null,
adults int,
children int,
primary key(reservationID),
FOREIGN KEY (userName)
        REFERENCES newUser (userName)
        ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (foodID)
        REFERENCES food(foodID)
        ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (packageName)
        REFERENCES packages(packageName)
        ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (roomNo)
        REFERENCES Rooms (roomNo)
        ON UPDATE CASCADE ON DELETE CASCADE 
);

CREATE TABLE payments(
invoiceNo int not null auto_increment ,
username VARCHAR(50) NOT NULL DEFAULT ' ',
firstName Varchar(15) NOT NULL DEFAULT ' ',
lastName Varchar(15) NOT NULL DEFAULT ' ',
reservationID int not null ,
paymentType char(10) not null,
cardNo int(30) not null,
cvv int not null,
nameOnCard char(25) not null,
primary key(invoiceNo),
FOREIGN KEY (userName)
        REFERENCES newUser (userName)
        ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (reservationID)
        REFERENCES reservation (reservationID)
        ON UPDATE CASCADE ON DELETE CASCADE 
);
CREATE TABLE cancelation(
CancelationID int not null auto_increment,
reservationID int not null ,
roomNo int not null ,
invoiceNo int not null  ,
username VARCHAR(50) NOT NULL DEFAULT ' ',
reservationDate Date not null,
cancelationDate date not null,
primary key(cancelationID),
FOREIGN KEY (userName)
        REFERENCES newUser (userName)
        ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (invoiceNo)
        REFERENCES payments (invoiceNo)
        ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (roomNo)
        REFERENCES Rooms (roomNo)
        ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (reservationID)
        REFERENCES reservation(reservationID)
        ON UPDATE CASCADE ON DELETE CASCADE 
);

CREATE TABLE feedback (
    feedbackNo INT NOT NULL auto_increment,
    username VARCHAR(50) NOT NULL DEFAULT ' ',
    reservationID INT NOT NULL ,
    roomNo INT NOT NULL ,
    rating INT,
    review TEXT,
    PRIMARY KEY (feedbackNo),
    FOREIGN KEY (userName)
        REFERENCES newUser (userName)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (roomNo)
        REFERENCES Rooms (roomNo)
        ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (reservationID)
        REFERENCES reservation (reservationID)
        ON UPDATE CASCADE ON DELETE CASCADE
);

/*inserts*/

insert into newUser values ('Dhan', 'dhanpreet','kaur', 'dk@gmail.com','dk123','123 45st ','asd','fg','fdsfd','2w33e4','1234567890'),
('priyawalia','priya','walia','pw@gmail.com','pw123','345 78st','dfg','gh','frgvfv','5t6 6y7', '0987654321');
insert into loginDetails values ('dhan','dk@gamil.com','dk123');
insert into rooms values (101,'single', 1,1, 110.0),(110,'single',2,1,160),(120,'single',1,1,110),
(130,'single',1,1,110),(201,'king',1,1,258),(210,'king',2,1,289),(220,'king',2,2,310),(230,'king',3,2,389),
(301,'queen',1,1,200),(310,'queen',1,1,200),(320,'queen',2,2,300),(330,'queen',2,2,300),
(401,'suite',1,1,700),(410,'double suite',2,2,1000);
insert into roomStatus values (101,0),(110,1),(120,0),(130,1),(201,1),(210,1),(220,0),(230,1),
(301,1),(310,0),(320,0),(330,0),(401,0),(410,1);/* 0,states empty room and 1 indicates that room is taken*/
insert into food values (1,'breakfast',79),(2,'lunch',100),(3,'dinner',90),
(4,'snacks',70),(5,'fruits',50),(6,'softdrinks',30),(7,'juice',45),(8,'smoothies',45),(9,'desert',70),
(10,'breakfast and dinner',169),(11,'breakfast,snacks and dinner',239),(12,'breakfast,snacks,drinks and dinner',269);
insert into packages values ('special', 330, 10, 200),('luxury', 410, 12,250),('light',101,1,79);
insert into reservation values (100,'dhan', 3,null, 110, '2020-07-09','2020-07-11','2020-07-07',1,0);
insert into payments values(87,'dhan','dhanpreet','kaur', 100, 'credit', 4567890, 765, 'Dhanpreet kaur');
insert into cancelation values (24, 100,110, 87, 'dhan','2020-07-07','2020-07-08');
insert into feedback values (65, 'dhan', 100,110,9,'excellent service');


/*views*/

create view customerReview as(select userName,rating,review from feedback);
select * from customerReview;
select* from loginDetails;

create view AvailableRooms as (select roomNo,roomType,noOfBedrooms, noOfWashrooms,price from rooms where roomNo in (select roomNo from roomStatus where roomStatusID = 0));
select * from AvailableRooms;

create view package as(select packages.packagename,packages.roomNo,packages.discount,food.fooditem from packages inner join food on packages.foodid = food.foodid);
select* from package;

create view c as(select rooms.roomType, rooms.roomNo, rooms.noOfBedrooms,rooms.noOfWashrooms,reservation.foodid, reservation.userName from rooms inner join reservation on rooms.roomNo = reservation.roomNo);
create view myB as (select c.roomType,c.RoomNo,c.noOfBedrooms,c.noOfWashrooms,c.userName,food.foodItem from c inner join food where c.foodID = food.foodid);
create view myBookings as (select myB.roomType, myB.roomNo, myB.noOfBedrooms, myB.noOfWashrooms,myB.foodItem from myB inner join loginDetails where myB.userName = loginDetails.userName );
select*from myBookings;

create view account as(select newUser.username, newuser.firstname, newuser.lastname, newuser.userEmail, newuser.password, newuser.address1, newuser.city, newuser.state, newuser.country, newuser.postalcode from newuser inner join loginDetails on newuser.username=loginDetails.username);
select * from account;

create view reservationconfirmation as(select loginDetails.userName, reservation.packagename,reservation.foodid,reservation.roomno,reservation.checkin,reservation.checkout, reservation.adults,reservation.children from logindetails inner join reservation on logindetails.username = reservation.username);
select * from reservationConfirmation;

